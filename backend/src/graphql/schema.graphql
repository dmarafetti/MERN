scalar Date

type Query {
    me: User!
    projects(name: String): [Project!]!
    users(query: String): [User!]!
}

type Mutation {
    createUser(data: CreateUserInput): User!
    createProject(data: CreateProjectInput): Project!
}

input CreateUserInput {
    name: String!
    lastname: String!
    jobTitle: String!
    country: String!
    city: String!
    avatar: String!
}

input CreateProjectInput {

    name: String!
    description: String!
    technology: String!
    price: Float!
    owner: String!
}




type User {
    id: ID!
    name: String!
    lastname: String!
    jobTitle: String!
    country: String!
    city: String!
    avatar: String!
    createdAt: Date!
    updatedAt: Date!
    projects: [Project!]!
}

type Project {
    id: ID!
    name: String!
    description: String!
    technology: String!
    price: Float!
    owner: User!
}

type Subscription {

    count: Int!
}
